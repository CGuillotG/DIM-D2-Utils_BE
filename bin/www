#!/usr/bin/env node
require('dotenv').config({ path: '.env' })

const http = require('http')
const chalk = require('chalk')
let app = require('../app')

const app_name = require('../package.json').name
const app_version = require('../package.json').version

console.log(chalk`{cyan ${app_name.toUpperCase()} is running...}`)

// catch 404
app.use((req, res, next) => {
    res.status(404)
    res.json({ message: 'Error 404 - Page not found' })
})

app.use((err, req, res, next) => {
    // always log the error
    console.error('ERROR', req.method, req.path, err)

    // only render if the error ocurred before sending the response
    if (!res.headersSent) res.status(500).json(err)
})

let server = http.createServer(app)

server.on('error', error => {
    if (error.syscall !== 'listen') throw error
    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(`Port ${process.env.PORT} requires elevated privileges`)
            process.exit(1)
            break
        case 'EADDRINUSE':
            console.error(`Port ${process.env.PORT} is already in use`)
            process.exit(1)
            break
        default:
            throw error
    }
})

server.listen(process.env.PORT, () => console.log(chalk`Listening on {blue http://localhost:${process.env.PORT}}`))
